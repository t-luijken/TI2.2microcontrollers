
eindopdracht.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000726  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000f6  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000020  00800100  00800100  00000726  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000726  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000a8  00000000  00000000  00000781  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000011a7  00000000  00000000  00000829  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000947  00000000  00000000  000019d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000672  00000000  00000000  00002317  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001c0  00000000  00000000  0000298c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000288  00000000  00000000  00002b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003cf  00000000  00000000  00002dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b0  00000000  00000000  000031a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000066a  0000066a  0000071e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003254  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.wait    0000001e  000005a2  000005a2  00000656  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.newNumber 00000032  000004cc  000004cc  00000580  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.contains 00000052  000003fc  000003fc  000004b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.check   000000aa  000001a6  000001a6  0000025a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.__vector_2 0000003a  00000492  00000492  00000546  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.__vector_3 00000058  000003a4  000003a4  00000458  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.adcInit 0000000a  00000658  00000658  0000070c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.spi_masterInit 00000016  000005f6  000005f6  000006aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.spi_write 00000008  00000662  00000662  00000716  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.spi_slaveSelect 00000018  000005de  000005de  00000692  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.spi_slaveDeSelect 00000016  0000060c  0000060c  000006c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.displayDriverInit 00000062  00000342  00000342  000003f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.spi_writeWord 00000026  0000057c  0000057c  00000630  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.writeNumber 00000070  000002d2  000002d2  00000386  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.main    00000082  00000250  00000250  00000304  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .bss.placeOfNumber 00000002  00800124  00800124  00000726  2**0
                  ALLOC
 30 .bss.readVal  00000002  00800126  00800126  00000726  2**0
                  ALLOC
 31 .text.libgcc.div 00000028  0000052c  0000052c  000005e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.libgcc.div 00000028  00000554  00000554  00000608  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .data         00000004  00800120  0000066e  00000722  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 34 .text.avrlibc 000000b0  000000f6  000000f6  000001aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.libgcc.div 0000002e  000004fe  000004fe  000005b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.libgcc.div 00000010  00000638  00000638  000006ec  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.libgcc.mul 00000016  00000622  00000622  000006d6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.libgcc.mul 00000010  00000648  00000648  000006fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.libgcc.div 00000044  0000044e  0000044e  00000502  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .text.libgcc.mul 0000001e  000005c0  000005c0  00000674  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 4f 00 	jmp	0x9e	; 0x9e <__ctors_end>
   4:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
   8:	0c 94 49 02 	jmp	0x492	; 0x492 <__vector_2>
   c:	0c 94 d2 01 	jmp	0x3a4	; 0x3a4 <__vector_3>
  10:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  14:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  18:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  1c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  20:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  24:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  28:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  2c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  30:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  34:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  38:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  3c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  40:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  44:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  48:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  4c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  50:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  54:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  58:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  5c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  60:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  64:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  68:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  6c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  70:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  74:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  78:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  7c:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  80:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  84:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>
  88:	0c 94 35 03 	jmp	0x66a	; 0x66a <__bad_interrupt>

0000008c <.dinit>:
  8c:	01 00       	.word	0x0001	; ????
  8e:	01 20       	and	r0, r1
  90:	80 01       	movw	r16, r0
  92:	20 01       	movw	r4, r0
  94:	24 00       	.word	0x0024	; ????
  96:	06 6e       	ori	r16, 0xE6	; 230
  98:	01 24       	eor	r0, r1
  9a:	01 28       	or	r0, r1
  9c:	80 00       	.word	0x0080	; ????

0000009e <__ctors_end>:
  9e:	11 24       	eor	r1, r1
  a0:	1f be       	out	0x3f, r1	; 63
  a2:	cf ef       	ldi	r28, 0xFF	; 255
  a4:	d0 e1       	ldi	r29, 0x10	; 16
  a6:	de bf       	out	0x3e, r29	; 62
  a8:	cd bf       	out	0x3d, r28	; 61

000000aa <__do_copy_data>:
  aa:	ec e8       	ldi	r30, 0x8C	; 140
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	40 e0       	ldi	r20, 0x00	; 0
  b0:	19 c0       	rjmp	.+50     	; 0xe4 <__do_clear_bss+0x8>
  b2:	b7 91       	elpm	r27, Z+
  b4:	a7 91       	elpm	r26, Z+
  b6:	37 91       	elpm	r19, Z+
  b8:	27 91       	elpm	r18, Z+
  ba:	07 91       	elpm	r16, Z+
  bc:	07 fd       	sbrc	r16, 7
  be:	0e c0       	rjmp	.+28     	; 0xdc <__do_clear_bss>
  c0:	97 91       	elpm	r25, Z+
  c2:	87 91       	elpm	r24, Z+
  c4:	ef 01       	movw	r28, r30
  c6:	f9 2f       	mov	r31, r25
  c8:	e8 2f       	mov	r30, r24
  ca:	0b bf       	out	0x3b, r16	; 59
  cc:	07 90       	elpm	r0, Z+
  ce:	0d 92       	st	X+, r0
  d0:	a2 17       	cp	r26, r18
  d2:	b3 07       	cpc	r27, r19
  d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0x22>
  d6:	fe 01       	movw	r30, r28
  d8:	1b be       	out	0x3b, r1	; 59
  da:	04 c0       	rjmp	.+8      	; 0xe4 <__do_clear_bss+0x8>

000000dc <__do_clear_bss>:
  dc:	1d 92       	st	X+, r1
  de:	a2 17       	cp	r26, r18
  e0:	b3 07       	cpc	r27, r19
  e2:	e1 f7       	brne	.-8      	; 0xdc <__do_clear_bss>
  e4:	ed 39       	cpi	r30, 0x9D	; 157
  e6:	f4 07       	cpc	r31, r20
  e8:	21 f7       	brne	.-56     	; 0xb2 <__do_copy_data+0x8>
  ea:	0e 94 28 01 	call	0x250	; 0x250 <main>
  ee:	0c 94 79 00 	jmp	0xf2	; 0xf2 <_exit>

000000f2 <_exit>:
  f2:	f8 94       	cli

000000f4 <__stop_program>:
  f4:	ff cf       	rjmp	.-2      	; 0xf4 <__stop_program>

Disassembly of section .text:

0000066a <__bad_interrupt>:
 66a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.wait:

000005a2 <wait>:
{
	SPDR = data;							// Load byte to Data register --> starts transmission
	while( !(SPSR & BIT(SPIF)) ); 			// Wait for transmission complete
	data = SPDR;							// New received data (eventually, MISO) in SPDR
	return data;							// Return received byte
}
 5a2:	20 e0       	ldi	r18, 0x00	; 0
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	08 c0       	rjmp	.+16     	; 0x5b8 <wait+0x16>
 5a8:	ef ec       	ldi	r30, 0xCF	; 207
 5aa:	f7 e0       	ldi	r31, 0x07	; 7
 5ac:	31 97       	sbiw	r30, 0x01	; 1
 5ae:	f1 f7       	brne	.-4      	; 0x5ac <wait+0xa>
 5b0:	00 c0       	rjmp	.+0      	; 0x5b2 <wait+0x10>
 5b2:	00 00       	nop
 5b4:	2f 5f       	subi	r18, 0xFF	; 255
 5b6:	3f 4f       	sbci	r19, 0xFF	; 255
 5b8:	28 17       	cp	r18, r24
 5ba:	39 07       	cpc	r19, r25
 5bc:	ac f3       	brlt	.-22     	; 0x5a8 <wait+0x6>
 5be:	08 95       	ret

Disassembly of section .text.newNumber:

000004cc <newNumber>:
 4cc:	cf 93       	push	r28
 4ce:	df 93       	push	r29
 4d0:	c0 e0       	ldi	r28, 0x00	; 0
 4d2:	d0 e0       	ldi	r29, 0x00	; 0
 4d4:	0e c0       	rjmp	.+28     	; 0x4f2 <newNumber+0x26>
 4d6:	0e 94 c6 00 	call	0x18c	; 0x18c <rand>
 4da:	6a e0       	ldi	r22, 0x0A	; 10
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	0e 94 96 02 	call	0x52c	; 0x52c <__divmodhi4>
 4e2:	fe 01       	movw	r30, r28
 4e4:	ee 0f       	add	r30, r30
 4e6:	ff 1f       	adc	r31, r31
 4e8:	e0 50       	subi	r30, 0x00	; 0
 4ea:	ff 4f       	sbci	r31, 0xFF	; 255
 4ec:	91 83       	std	Z+1, r25	; 0x01
 4ee:	80 83       	st	Z, r24
 4f0:	21 96       	adiw	r28, 0x01	; 1
 4f2:	c4 30       	cpi	r28, 0x04	; 4
 4f4:	d1 05       	cpc	r29, r1
 4f6:	7c f3       	brlt	.-34     	; 0x4d6 <newNumber+0xa>
 4f8:	df 91       	pop	r29
 4fa:	cf 91       	pop	r28
 4fc:	08 95       	ret

Disassembly of section .text.contains:

000003fc <contains>:
 3fc:	20 e0       	ldi	r18, 0x00	; 0
 3fe:	30 e0       	ldi	r19, 0x00	; 0
 400:	20 c0       	rjmp	.+64     	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 402:	f9 01       	movw	r30, r18
 404:	ee 0f       	add	r30, r30
 406:	ff 1f       	adc	r31, r31
 408:	e0 50       	subi	r30, 0x00	; 0
 40a:	ff 4f       	sbci	r31, 0xFF	; 255
 40c:	40 81       	ld	r20, Z
 40e:	51 81       	ldd	r21, Z+1	; 0x01
 410:	48 17       	cp	r20, r24
 412:	59 07       	cpc	r21, r25
 414:	a1 f4       	brne	.+40     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 416:	f9 01       	movw	r30, r18
 418:	ee 0f       	add	r30, r30
 41a:	ff 1f       	adc	r31, r31
 41c:	e0 5f       	subi	r30, 0xF0	; 240
 41e:	fe 4f       	sbci	r31, 0xFE	; 254
 420:	40 81       	ld	r20, Z
 422:	51 81       	ldd	r21, Z+1	; 0x01
 424:	41 30       	cpi	r20, 0x01	; 1
 426:	51 05       	cpc	r21, r1
 428:	51 f0       	breq	.+20     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 42a:	22 0f       	add	r18, r18
 42c:	33 1f       	adc	r19, r19
 42e:	f9 01       	movw	r30, r18
 430:	e0 5f       	subi	r30, 0xF0	; 240
 432:	fe 4f       	sbci	r31, 0xFE	; 254
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	90 e0       	ldi	r25, 0x00	; 0
 438:	91 83       	std	Z+1, r25	; 0x01
 43a:	80 83       	st	Z, r24
 43c:	08 95       	ret
 43e:	2f 5f       	subi	r18, 0xFF	; 255
 440:	3f 4f       	sbci	r19, 0xFF	; 255
 442:	24 30       	cpi	r18, 0x04	; 4
 444:	31 05       	cpc	r19, r1
 446:	ec f2       	brlt	.-70     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	08 95       	ret

Disassembly of section .text.check:

000001a6 <check>:
 1a6:	cf 93       	push	r28
 1a8:	df 93       	push	r29
 1aa:	c0 e0       	ldi	r28, 0x00	; 0
 1ac:	d0 e0       	ldi	r29, 0x00	; 0
 1ae:	34 c0       	rjmp	.+104    	; 0x218 <check+0x72>
 1b0:	9e 01       	movw	r18, r28
 1b2:	22 0f       	add	r18, r18
 1b4:	33 1f       	adc	r19, r19
 1b6:	f9 01       	movw	r30, r18
 1b8:	e0 5f       	subi	r30, 0xF0	; 240
 1ba:	fe 4f       	sbci	r31, 0xFE	; 254
 1bc:	11 82       	std	Z+1, r1	; 0x01
 1be:	10 82       	st	Z, r1
 1c0:	f9 01       	movw	r30, r18
 1c2:	e8 5f       	subi	r30, 0xF8	; 248
 1c4:	fe 4f       	sbci	r31, 0xFE	; 254
 1c6:	80 81       	ld	r24, Z
 1c8:	91 81       	ldd	r25, Z+1	; 0x01
 1ca:	f9 01       	movw	r30, r18
 1cc:	e0 50       	subi	r30, 0x00	; 0
 1ce:	ff 4f       	sbci	r31, 0xFF	; 255
 1d0:	20 81       	ld	r18, Z
 1d2:	31 81       	ldd	r19, Z+1	; 0x01
 1d4:	82 17       	cp	r24, r18
 1d6:	93 07       	cpc	r25, r19
 1d8:	a9 f0       	breq	.+42     	; 0x204 <check+0x5e>
 1da:	fe 01       	movw	r30, r28
 1dc:	ee 0f       	add	r30, r30
 1de:	ff 1f       	adc	r31, r31
 1e0:	e8 5e       	subi	r30, 0xE8	; 232
 1e2:	fe 4f       	sbci	r31, 0xFE	; 254
 1e4:	11 82       	std	Z+1, r1	; 0x01
 1e6:	10 82       	st	Z, r1
 1e8:	0e 94 fe 01 	call	0x3fc	; 0x3fc <contains>
 1ec:	89 2b       	or	r24, r25
 1ee:	99 f0       	breq	.+38     	; 0x216 <check+0x70>
 1f0:	fe 01       	movw	r30, r28
 1f2:	ee 0f       	add	r30, r30
 1f4:	ff 1f       	adc	r31, r31
 1f6:	e8 5e       	subi	r30, 0xE8	; 232
 1f8:	fe 4f       	sbci	r31, 0xFE	; 254
 1fa:	81 e0       	ldi	r24, 0x01	; 1
 1fc:	90 e0       	ldi	r25, 0x00	; 0
 1fe:	91 83       	std	Z+1, r25	; 0x01
 200:	80 83       	st	Z, r24
 202:	09 c0       	rjmp	.+18     	; 0x216 <check+0x70>
 204:	fe 01       	movw	r30, r28
 206:	ee 0f       	add	r30, r30
 208:	ff 1f       	adc	r31, r31
 20a:	e8 5e       	subi	r30, 0xE8	; 232
 20c:	fe 4f       	sbci	r31, 0xFE	; 254
 20e:	82 e0       	ldi	r24, 0x02	; 2
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	91 83       	std	Z+1, r25	; 0x01
 214:	80 83       	st	Z, r24
 216:	21 96       	adiw	r28, 0x01	; 1
 218:	c4 30       	cpi	r28, 0x04	; 4
 21a:	d1 05       	cpc	r29, r1
 21c:	4c f2       	brlt	.-110    	; 0x1b0 <check+0xa>
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	0b c0       	rjmp	.+22     	; 0x23a <check+0x94>
 224:	fc 01       	movw	r30, r24
 226:	ee 0f       	add	r30, r30
 228:	ff 1f       	adc	r31, r31
 22a:	e8 5e       	subi	r30, 0xE8	; 232
 22c:	fe 4f       	sbci	r31, 0xFE	; 254
 22e:	20 81       	ld	r18, Z
 230:	31 81       	ldd	r19, Z+1	; 0x01
 232:	22 30       	cpi	r18, 0x02	; 2
 234:	31 05       	cpc	r19, r1
 236:	39 f4       	brne	.+14     	; 0x246 <check+0xa0>
 238:	01 96       	adiw	r24, 0x01	; 1
 23a:	84 30       	cpi	r24, 0x04	; 4
 23c:	91 05       	cpc	r25, r1
 23e:	94 f3       	brlt	.-28     	; 0x224 <check+0x7e>
 240:	81 e0       	ldi	r24, 0x01	; 1
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	02 c0       	rjmp	.+4      	; 0x24a <check+0xa4>
 246:	80 e0       	ldi	r24, 0x00	; 0
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

Disassembly of section .text.__vector_2:

00000492 <__vector_2>:
 492:	1f 92       	push	r1
 494:	0f 92       	push	r0
 496:	0f b6       	in	r0, 0x3f	; 63
 498:	0f 92       	push	r0
 49a:	11 24       	eor	r1, r1
 49c:	8f 93       	push	r24
 49e:	9f 93       	push	r25
 4a0:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <placeOfNumber>
 4a4:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <placeOfNumber+0x1>
 4a8:	01 96       	adiw	r24, 0x01	; 1
 4aa:	90 93 25 01 	sts	0x0125, r25	; 0x800125 <placeOfNumber+0x1>
 4ae:	80 93 24 01 	sts	0x0124, r24	; 0x800124 <placeOfNumber>
 4b2:	04 97       	sbiw	r24, 0x04	; 4
 4b4:	20 f0       	brcs	.+8      	; 0x4be <__vector_2+0x2c>
 4b6:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <placeOfNumber+0x1>
 4ba:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <placeOfNumber>
 4be:	9f 91       	pop	r25
 4c0:	8f 91       	pop	r24
 4c2:	0f 90       	pop	r0
 4c4:	0f be       	out	0x3f, r0	; 63
 4c6:	0f 90       	pop	r0
 4c8:	1f 90       	pop	r1
 4ca:	18 95       	reti

Disassembly of section .text.__vector_3:

000003a4 <__vector_3>:
 3a4:	1f 92       	push	r1
 3a6:	0f 92       	push	r0
 3a8:	0f b6       	in	r0, 0x3f	; 63
 3aa:	0f 92       	push	r0
 3ac:	11 24       	eor	r1, r1
 3ae:	0b b6       	in	r0, 0x3b	; 59
 3b0:	0f 92       	push	r0
 3b2:	2f 93       	push	r18
 3b4:	3f 93       	push	r19
 3b6:	4f 93       	push	r20
 3b8:	5f 93       	push	r21
 3ba:	6f 93       	push	r22
 3bc:	7f 93       	push	r23
 3be:	8f 93       	push	r24
 3c0:	9f 93       	push	r25
 3c2:	af 93       	push	r26
 3c4:	bf 93       	push	r27
 3c6:	ef 93       	push	r30
 3c8:	ff 93       	push	r31
 3ca:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <check>
 3ce:	89 2b       	or	r24, r25
 3d0:	11 f0       	breq	.+4      	; 0x3d6 <__vector_3+0x32>
 3d2:	0e 94 66 02 	call	0x4cc	; 0x4cc <newNumber>
 3d6:	ff 91       	pop	r31
 3d8:	ef 91       	pop	r30
 3da:	bf 91       	pop	r27
 3dc:	af 91       	pop	r26
 3de:	9f 91       	pop	r25
 3e0:	8f 91       	pop	r24
 3e2:	7f 91       	pop	r23
 3e4:	6f 91       	pop	r22
 3e6:	5f 91       	pop	r21
 3e8:	4f 91       	pop	r20
 3ea:	3f 91       	pop	r19
 3ec:	2f 91       	pop	r18
 3ee:	0f 90       	pop	r0
 3f0:	0b be       	out	0x3b, r0	; 59
 3f2:	0f 90       	pop	r0
 3f4:	0f be       	out	0x3f, r0	; 63
 3f6:	0f 90       	pop	r0
 3f8:	1f 90       	pop	r1
 3fa:	18 95       	reti

Disassembly of section .text.adcInit:

00000658 <adcInit>:


// Initialize ADC:
void adcInit( void )
{
	ADMUX = 0b11100001;            // AREF=2,56 V, result left adjusted, channel1 at pin PF1
 658:	81 ee       	ldi	r24, 0xE1	; 225
 65a:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b10000110;        // ADC-enable, no interrupt, no free running, division by 64
 65c:	86 e8       	ldi	r24, 0x86	; 134
 65e:	86 b9       	out	0x06, r24	; 6
 660:	08 95       	ret

Disassembly of section .text.spi_masterInit:

000005f6 <spi_masterInit>:
}
void spi_masterInit(void)
{
	DDR_SPI = 0xff;							// All pins output: MOSI, SCK, SS, SS_display as output
 5f6:	8f ef       	ldi	r24, 0xFF	; 255
 5f8:	87 bb       	out	0x17, r24	; 23
	DDR_SPI &= ~BIT(SPI_MISO);				// 	except: MISO input
 5fa:	87 b3       	in	r24, 0x17	; 23
 5fc:	87 7f       	andi	r24, 0xF7	; 247
 5fe:	87 bb       	out	0x17, r24	; 23
	PORT_SPI |= BIT(SPI_SS);				// SS_ADC == 1: deselect slave
 600:	88 b3       	in	r24, 0x18	; 24
 602:	81 60       	ori	r24, 0x01	; 1
 604:	88 bb       	out	0x18, r24	; 24
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR1);	// or: SPCR = 0b11010010;
 606:	82 e5       	ldi	r24, 0x52	; 82
 608:	8d b9       	out	0x0d, r24	; 13
 60a:	08 95       	ret

Disassembly of section .text.spi_write:

00000662 <spi_write>:


// Write a byte from master to slave
void spi_write( unsigned char data )
{
	SPDR = data;							// Load byte to Data register --> starts transmission
 662:	8f b9       	out	0x0f, r24	; 15
	while( !(SPSR & BIT(SPIF)) ); 			// Wait for transmission complete
 664:	77 9b       	sbis	0x0e, 7	; 14
 666:	fe cf       	rjmp	.-4      	; 0x664 <spi_write+0x2>
}
 668:	08 95       	ret

Disassembly of section .text.spi_slaveSelect:

000005de <spi_slaveSelect>:
}

// Select device on pinnumer PORTB
void spi_slaveSelect(unsigned char chipNumber)
{
	PORTB &= ~BIT(chipNumber);
 5de:	98 b3       	in	r25, 0x18	; 24
 5e0:	21 e0       	ldi	r18, 0x01	; 1
 5e2:	30 e0       	ldi	r19, 0x00	; 0
 5e4:	02 c0       	rjmp	.+4      	; 0x5ea <spi_slaveSelect+0xc>
 5e6:	22 0f       	add	r18, r18
 5e8:	33 1f       	adc	r19, r19
 5ea:	8a 95       	dec	r24
 5ec:	e2 f7       	brpl	.-8      	; 0x5e6 <spi_slaveSelect+0x8>
 5ee:	20 95       	com	r18
 5f0:	29 23       	and	r18, r25
 5f2:	28 bb       	out	0x18, r18	; 24
 5f4:	08 95       	ret

Disassembly of section .text.spi_slaveDeSelect:

0000060c <spi_slaveDeSelect>:

// Deselect device on pinnumer PORTB
void spi_slaveDeSelect(unsigned char chipNumber)
{

	PORTB |= BIT(chipNumber);
 60c:	98 b3       	in	r25, 0x18	; 24
 60e:	21 e0       	ldi	r18, 0x01	; 1
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	02 c0       	rjmp	.+4      	; 0x618 <spi_slaveDeSelect+0xc>
 614:	22 0f       	add	r18, r18
 616:	33 1f       	adc	r19, r19
 618:	8a 95       	dec	r24
 61a:	e2 f7       	brpl	.-8      	; 0x614 <spi_slaveDeSelect+0x8>
 61c:	29 2b       	or	r18, r25
 61e:	28 bb       	out	0x18, r18	; 24
 620:	08 95       	ret

Disassembly of section .text.displayDriverInit:

00000342 <displayDriverInit>:
{
	SPDR = data;							// Load byte to Data register --> starts transmission
	while( !(SPSR & BIT(SPIF)) ); 			// Wait for transmission complete
	data = SPDR;							// New received data (eventually, MISO) in SPDR
	return data;							// Return received byte
}
 342:	80 e0       	ldi	r24, 0x00	; 0
 344:	0e 94 ef 02 	call	0x5de	; 0x5de <spi_slaveSelect>
 348:	89 e0       	ldi	r24, 0x09	; 9
 34a:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 34e:	8f e0       	ldi	r24, 0x0F	; 15
 350:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 354:	80 e0       	ldi	r24, 0x00	; 0
 356:	0e 94 06 03 	call	0x60c	; 0x60c <spi_slaveDeSelect>
 35a:	80 e0       	ldi	r24, 0x00	; 0
 35c:	0e 94 ef 02 	call	0x5de	; 0x5de <spi_slaveSelect>
 360:	8a e0       	ldi	r24, 0x0A	; 10
 362:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 366:	84 e0       	ldi	r24, 0x04	; 4
 368:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	0e 94 06 03 	call	0x60c	; 0x60c <spi_slaveDeSelect>
 372:	80 e0       	ldi	r24, 0x00	; 0
 374:	0e 94 ef 02 	call	0x5de	; 0x5de <spi_slaveSelect>
 378:	8b e0       	ldi	r24, 0x0B	; 11
 37a:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 37e:	87 e0       	ldi	r24, 0x07	; 7
 380:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 384:	80 e0       	ldi	r24, 0x00	; 0
 386:	0e 94 06 03 	call	0x60c	; 0x60c <spi_slaveDeSelect>
 38a:	80 e0       	ldi	r24, 0x00	; 0
 38c:	0e 94 ef 02 	call	0x5de	; 0x5de <spi_slaveSelect>
 390:	8c e0       	ldi	r24, 0x0C	; 12
 392:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 396:	81 e0       	ldi	r24, 0x01	; 1
 398:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 39c:	80 e0       	ldi	r24, 0x00	; 0
 39e:	0e 94 06 03 	call	0x60c	; 0x60c <spi_slaveDeSelect>
 3a2:	08 95       	ret

Disassembly of section .text.spi_writeWord:

0000057c <spi_writeWord>:
 57c:	cf 93       	push	r28
 57e:	df 93       	push	r29
 580:	d8 2f       	mov	r29, r24
 582:	c6 2f       	mov	r28, r22
 584:	80 e0       	ldi	r24, 0x00	; 0
 586:	0e 94 ef 02 	call	0x5de	; 0x5de <spi_slaveSelect>
 58a:	8d 2f       	mov	r24, r29
 58c:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 590:	8c 2f       	mov	r24, r28
 592:	0e 94 31 03 	call	0x662	; 0x662 <spi_write>
 596:	80 e0       	ldi	r24, 0x00	; 0
 598:	0e 94 06 03 	call	0x60c	; 0x60c <spi_slaveDeSelect>
 59c:	df 91       	pop	r29
 59e:	cf 91       	pop	r28
 5a0:	08 95       	ret

Disassembly of section .text.writeNumber:

000002d2 <writeNumber>:
 2d2:	cf 93       	push	r28
 2d4:	df 93       	push	r29
 2d6:	c1 e0       	ldi	r28, 0x01	; 1
 2d8:	0c c0       	rjmp	.+24     	; 0x2f2 <writeNumber+0x20>
 2da:	ec 2f       	mov	r30, r28
 2dc:	f0 e0       	ldi	r31, 0x00	; 0
 2de:	31 97       	sbiw	r30, 0x01	; 1
 2e0:	ee 0f       	add	r30, r30
 2e2:	ff 1f       	adc	r31, r31
 2e4:	e8 5f       	subi	r30, 0xF8	; 248
 2e6:	fe 4f       	sbci	r31, 0xFE	; 254
 2e8:	60 81       	ld	r22, Z
 2ea:	8c 2f       	mov	r24, r28
 2ec:	0e 94 be 02 	call	0x57c	; 0x57c <spi_writeWord>
 2f0:	cf 5f       	subi	r28, 0xFF	; 255
 2f2:	c5 30       	cpi	r28, 0x05	; 5
 2f4:	90 f3       	brcs	.-28     	; 0x2da <writeNumber+0x8>
 2f6:	c5 e0       	ldi	r28, 0x05	; 5
 2f8:	d0 e0       	ldi	r29, 0x00	; 0
 2fa:	1d c0       	rjmp	.+58     	; 0x336 <writeNumber+0x64>
 2fc:	fe 01       	movw	r30, r28
 2fe:	35 97       	sbiw	r30, 0x05	; 5
 300:	ee 0f       	add	r30, r30
 302:	ff 1f       	adc	r31, r31
 304:	e8 5e       	subi	r30, 0xE8	; 232
 306:	fe 4f       	sbci	r31, 0xFE	; 254
 308:	80 81       	ld	r24, Z
 30a:	91 81       	ldd	r25, Z+1	; 0x01
 30c:	81 30       	cpi	r24, 0x01	; 1
 30e:	91 05       	cpc	r25, r1
 310:	69 f0       	breq	.+26     	; 0x32c <writeNumber+0x5a>
 312:	38 f0       	brcs	.+14     	; 0x322 <writeNumber+0x50>
 314:	02 97       	sbiw	r24, 0x02	; 2
 316:	71 f4       	brne	.+28     	; 0x334 <writeNumber+0x62>
 318:	6e e7       	ldi	r22, 0x7E	; 126
 31a:	8c 2f       	mov	r24, r28
 31c:	0e 94 be 02 	call	0x57c	; 0x57c <spi_writeWord>
 320:	09 c0       	rjmp	.+18     	; 0x334 <writeNumber+0x62>
 322:	67 e3       	ldi	r22, 0x37	; 55
 324:	8c 2f       	mov	r24, r28
 326:	0e 94 be 02 	call	0x57c	; 0x57c <spi_writeWord>
 32a:	04 c0       	rjmp	.+8      	; 0x334 <writeNumber+0x62>
 32c:	63 e1       	ldi	r22, 0x13	; 19
 32e:	8c 2f       	mov	r24, r28
 330:	0e 94 be 02 	call	0x57c	; 0x57c <spi_writeWord>
 334:	21 96       	adiw	r28, 0x01	; 1
 336:	c9 30       	cpi	r28, 0x09	; 9
 338:	d1 05       	cpc	r29, r1
 33a:	04 f3       	brlt	.-64     	; 0x2fc <writeNumber+0x2a>
 33c:	df 91       	pop	r29
 33e:	cf 91       	pop	r28
 340:	08 95       	ret

Disassembly of section .text.main:

00000250 <main>:
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	87 bb       	out	0x17, r24	; 23
 254:	11 ba       	out	0x11, r1	; 17
 256:	9f ef       	ldi	r25, 0xFF	; 255
 258:	94 bb       	out	0x14, r25	; 20
 25a:	ea e6       	ldi	r30, 0x6A	; 106
 25c:	f0 e0       	ldi	r31, 0x00	; 0
 25e:	80 81       	ld	r24, Z
 260:	8a 62       	ori	r24, 0x2A	; 42
 262:	80 83       	st	Z, r24
 264:	89 b7       	in	r24, 0x39	; 57
 266:	86 60       	ori	r24, 0x06	; 6
 268:	89 bf       	out	0x39, r24	; 57
 26a:	78 94       	sei
 26c:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
 270:	9a bb       	out	0x1a, r25	; 26
 272:	0e 94 2c 03 	call	0x658	; 0x658 <adcInit>
 276:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <spi_masterInit>
 27a:	0e 94 a1 01 	call	0x342	; 0x342 <displayDriverInit>
 27e:	0e 94 66 02 	call	0x4cc	; 0x4cc <newNumber>
 282:	86 b1       	in	r24, 0x06	; 6
 284:	80 64       	ori	r24, 0x40	; 64
 286:	86 b9       	out	0x06, r24	; 6
 288:	36 99       	sbic	0x06, 6	; 6
 28a:	fe cf       	rjmp	.-4      	; 0x288 <main+0x38>
 28c:	85 b1       	in	r24, 0x05	; 5
 28e:	86 95       	lsr	r24
 290:	86 95       	lsr	r24
 292:	95 e2       	ldi	r25, 0x25	; 37
 294:	89 9f       	mul	r24, r25
 296:	81 2d       	mov	r24, r1
 298:	11 24       	eor	r1, r1
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <readVal+0x1>
 2a0:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <readVal>
 2a4:	85 b1       	in	r24, 0x05	; 5
 2a6:	8b bb       	out	0x1b, r24	; 27
 2a8:	e0 91 24 01 	lds	r30, 0x0124	; 0x800124 <placeOfNumber>
 2ac:	f0 91 25 01 	lds	r31, 0x0125	; 0x800125 <placeOfNumber+0x1>
 2b0:	ee 0f       	add	r30, r30
 2b2:	ff 1f       	adc	r31, r31
 2b4:	e8 5f       	subi	r30, 0xF8	; 248
 2b6:	fe 4f       	sbci	r31, 0xFE	; 254
 2b8:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <readVal>
 2bc:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <readVal+0x1>
 2c0:	91 83       	std	Z+1, r25	; 0x01
 2c2:	80 83       	st	Z, r24
 2c4:	0e 94 69 01 	call	0x2d2	; 0x2d2 <writeNumber>
 2c8:	84 e6       	ldi	r24, 0x64	; 100
 2ca:	90 e0       	ldi	r25, 0x00	; 0
 2cc:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <wait>
 2d0:	d8 cf       	rjmp	.-80     	; 0x282 <main+0x32>

Disassembly of section .text.libgcc.div:

0000052c <__divmodhi4>:
 52c:	97 fb       	bst	r25, 7
 52e:	07 2e       	mov	r0, r23
 530:	16 f4       	brtc	.+4      	; 0x536 <__divmodhi4+0xa>
 532:	00 94       	com	r0
 534:	07 d0       	rcall	.+14     	; 0x544 <__divmodhi4_neg1>
 536:	77 fd       	sbrc	r23, 7
 538:	09 d0       	rcall	.+18     	; 0x54c <__divmodhi4_neg2>
 53a:	0e 94 aa 02 	call	0x554	; 0x554 <__udivmodhi4>
 53e:	07 fc       	sbrc	r0, 7
 540:	05 d0       	rcall	.+10     	; 0x54c <__divmodhi4_neg2>
 542:	3e f4       	brtc	.+14     	; 0x552 <__divmodhi4_exit>

00000544 <__divmodhi4_neg1>:
 544:	90 95       	com	r25
 546:	81 95       	neg	r24
 548:	9f 4f       	sbci	r25, 0xFF	; 255
 54a:	08 95       	ret

0000054c <__divmodhi4_neg2>:
 54c:	70 95       	com	r23
 54e:	61 95       	neg	r22
 550:	7f 4f       	sbci	r23, 0xFF	; 255

00000552 <__divmodhi4_exit>:
 552:	08 95       	ret

Disassembly of section .text.libgcc.div:

00000554 <__udivmodhi4>:
 554:	aa 1b       	sub	r26, r26
 556:	bb 1b       	sub	r27, r27
 558:	51 e1       	ldi	r21, 0x11	; 17
 55a:	07 c0       	rjmp	.+14     	; 0x56a <__udivmodhi4_ep>

0000055c <__udivmodhi4_loop>:
 55c:	aa 1f       	adc	r26, r26
 55e:	bb 1f       	adc	r27, r27
 560:	a6 17       	cp	r26, r22
 562:	b7 07       	cpc	r27, r23
 564:	10 f0       	brcs	.+4      	; 0x56a <__udivmodhi4_ep>
 566:	a6 1b       	sub	r26, r22
 568:	b7 0b       	sbc	r27, r23

0000056a <__udivmodhi4_ep>:
 56a:	88 1f       	adc	r24, r24
 56c:	99 1f       	adc	r25, r25
 56e:	5a 95       	dec	r21
 570:	a9 f7       	brne	.-22     	; 0x55c <__udivmodhi4_loop>
 572:	80 95       	com	r24
 574:	90 95       	com	r25
 576:	bc 01       	movw	r22, r24
 578:	cd 01       	movw	r24, r26
 57a:	08 95       	ret

Disassembly of section .text.avrlibc:

000000f6 <do_rand>:
  f6:	8f 92       	push	r8
  f8:	9f 92       	push	r9
  fa:	af 92       	push	r10
  fc:	bf 92       	push	r11
  fe:	cf 92       	push	r12
 100:	df 92       	push	r13
 102:	ef 92       	push	r14
 104:	ff 92       	push	r15
 106:	cf 93       	push	r28
 108:	df 93       	push	r29
 10a:	ec 01       	movw	r28, r24
 10c:	68 81       	ld	r22, Y
 10e:	79 81       	ldd	r23, Y+1	; 0x01
 110:	8a 81       	ldd	r24, Y+2	; 0x02
 112:	9b 81       	ldd	r25, Y+3	; 0x03
 114:	61 15       	cp	r22, r1
 116:	71 05       	cpc	r23, r1
 118:	81 05       	cpc	r24, r1
 11a:	91 05       	cpc	r25, r1
 11c:	21 f4       	brne	.+8      	; 0x126 <do_rand+0x30>
 11e:	64 e2       	ldi	r22, 0x24	; 36
 120:	79 ed       	ldi	r23, 0xD9	; 217
 122:	8b e5       	ldi	r24, 0x5B	; 91
 124:	97 e0       	ldi	r25, 0x07	; 7
 126:	2d e1       	ldi	r18, 0x1D	; 29
 128:	33 ef       	ldi	r19, 0xF3	; 243
 12a:	41 e0       	ldi	r20, 0x01	; 1
 12c:	50 e0       	ldi	r21, 0x00	; 0
 12e:	0e 94 7f 02 	call	0x4fe	; 0x4fe <__divmodsi4>
 132:	49 01       	movw	r8, r18
 134:	5a 01       	movw	r10, r20
 136:	9b 01       	movw	r18, r22
 138:	ac 01       	movw	r20, r24
 13a:	a7 ea       	ldi	r26, 0xA7	; 167
 13c:	b1 e4       	ldi	r27, 0x41	; 65
 13e:	0e 94 11 03 	call	0x622	; 0x622 <__muluhisi3>
 142:	6b 01       	movw	r12, r22
 144:	7c 01       	movw	r14, r24
 146:	ac ee       	ldi	r26, 0xEC	; 236
 148:	b4 ef       	ldi	r27, 0xF4	; 244
 14a:	a5 01       	movw	r20, r10
 14c:	94 01       	movw	r18, r8
 14e:	0e 94 27 03 	call	0x64e	; 0x64e <__mulohisi3>
 152:	dc 01       	movw	r26, r24
 154:	cb 01       	movw	r24, r22
 156:	8c 0d       	add	r24, r12
 158:	9d 1d       	adc	r25, r13
 15a:	ae 1d       	adc	r26, r14
 15c:	bf 1d       	adc	r27, r15
 15e:	b7 ff       	sbrs	r27, 7
 160:	03 c0       	rjmp	.+6      	; 0x168 <do_rand+0x72>
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	a1 09       	sbc	r26, r1
 166:	b0 48       	sbci	r27, 0x80	; 128
 168:	88 83       	st	Y, r24
 16a:	99 83       	std	Y+1, r25	; 0x01
 16c:	aa 83       	std	Y+2, r26	; 0x02
 16e:	bb 83       	std	Y+3, r27	; 0x03
 170:	9f 77       	andi	r25, 0x7F	; 127
 172:	df 91       	pop	r29
 174:	cf 91       	pop	r28
 176:	ff 90       	pop	r15
 178:	ef 90       	pop	r14
 17a:	df 90       	pop	r13
 17c:	cf 90       	pop	r12
 17e:	bf 90       	pop	r11
 180:	af 90       	pop	r10
 182:	9f 90       	pop	r9
 184:	8f 90       	pop	r8
 186:	08 95       	ret

00000188 <rand_r>:
 188:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <do_rand>

0000018c <rand>:
 18c:	80 e2       	ldi	r24, 0x20	; 32
 18e:	91 e0       	ldi	r25, 0x01	; 1
 190:	0c 94 7b 00 	jmp	0xf6	; 0xf6 <do_rand>

00000194 <srand>:
 194:	a0 e0       	ldi	r26, 0x00	; 0
 196:	b0 e0       	ldi	r27, 0x00	; 0
 198:	e0 e2       	ldi	r30, 0x20	; 32
 19a:	f1 e0       	ldi	r31, 0x01	; 1
 19c:	80 83       	st	Z, r24
 19e:	91 83       	std	Z+1, r25	; 0x01
 1a0:	a2 83       	std	Z+2, r26	; 0x02
 1a2:	b3 83       	std	Z+3, r27	; 0x03
 1a4:	08 95       	ret

Disassembly of section .text.libgcc.div:

000004fe <__divmodsi4>:
 4fe:	05 2e       	mov	r0, r21
 500:	97 fb       	bst	r25, 7
 502:	1e f4       	brtc	.+6      	; 0x50a <__divmodsi4+0xc>
 504:	00 94       	com	r0
 506:	0e 94 1c 03 	call	0x638	; 0x638 <__negsi2>
 50a:	57 fd       	sbrc	r21, 7
 50c:	07 d0       	rcall	.+14     	; 0x51c <__divmodsi4_neg2>
 50e:	0e 94 27 02 	call	0x44e	; 0x44e <__udivmodsi4>
 512:	07 fc       	sbrc	r0, 7
 514:	03 d0       	rcall	.+6      	; 0x51c <__divmodsi4_neg2>
 516:	4e f4       	brtc	.+18     	; 0x52a <__divmodsi4_exit>
 518:	0c 94 1c 03 	jmp	0x638	; 0x638 <__negsi2>

0000051c <__divmodsi4_neg2>:
 51c:	50 95       	com	r21
 51e:	40 95       	com	r20
 520:	30 95       	com	r19
 522:	21 95       	neg	r18
 524:	3f 4f       	sbci	r19, 0xFF	; 255
 526:	4f 4f       	sbci	r20, 0xFF	; 255
 528:	5f 4f       	sbci	r21, 0xFF	; 255

0000052a <__divmodsi4_exit>:
 52a:	08 95       	ret

Disassembly of section .text.libgcc.div:

00000638 <__negsi2>:
 638:	90 95       	com	r25
 63a:	80 95       	com	r24
 63c:	70 95       	com	r23
 63e:	61 95       	neg	r22
 640:	7f 4f       	sbci	r23, 0xFF	; 255
 642:	8f 4f       	sbci	r24, 0xFF	; 255
 644:	9f 4f       	sbci	r25, 0xFF	; 255
 646:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00000622 <__muluhisi3>:
 622:	0e 94 e0 02 	call	0x5c0	; 0x5c0 <__umulhisi3>
 626:	a5 9f       	mul	r26, r21
 628:	90 0d       	add	r25, r0
 62a:	b4 9f       	mul	r27, r20
 62c:	90 0d       	add	r25, r0
 62e:	a4 9f       	mul	r26, r20
 630:	80 0d       	add	r24, r0
 632:	91 1d       	adc	r25, r1
 634:	11 24       	eor	r1, r1
 636:	08 95       	ret

Disassembly of section .text.libgcc.mul:

00000648 <__mulshisi3>:
 648:	b7 ff       	sbrs	r27, 7
 64a:	0c 94 11 03 	jmp	0x622	; 0x622 <__muluhisi3>

0000064e <__mulohisi3>:
 64e:	0e 94 11 03 	call	0x622	; 0x622 <__muluhisi3>
 652:	82 1b       	sub	r24, r18
 654:	93 0b       	sbc	r25, r19
 656:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000044e <__udivmodsi4>:
 44e:	a1 e2       	ldi	r26, 0x21	; 33
 450:	1a 2e       	mov	r1, r26
 452:	aa 1b       	sub	r26, r26
 454:	bb 1b       	sub	r27, r27
 456:	fd 01       	movw	r30, r26
 458:	0d c0       	rjmp	.+26     	; 0x474 <__udivmodsi4_ep>

0000045a <__udivmodsi4_loop>:
 45a:	aa 1f       	adc	r26, r26
 45c:	bb 1f       	adc	r27, r27
 45e:	ee 1f       	adc	r30, r30
 460:	ff 1f       	adc	r31, r31
 462:	a2 17       	cp	r26, r18
 464:	b3 07       	cpc	r27, r19
 466:	e4 07       	cpc	r30, r20
 468:	f5 07       	cpc	r31, r21
 46a:	20 f0       	brcs	.+8      	; 0x474 <__udivmodsi4_ep>
 46c:	a2 1b       	sub	r26, r18
 46e:	b3 0b       	sbc	r27, r19
 470:	e4 0b       	sbc	r30, r20
 472:	f5 0b       	sbc	r31, r21

00000474 <__udivmodsi4_ep>:
 474:	66 1f       	adc	r22, r22
 476:	77 1f       	adc	r23, r23
 478:	88 1f       	adc	r24, r24
 47a:	99 1f       	adc	r25, r25
 47c:	1a 94       	dec	r1
 47e:	69 f7       	brne	.-38     	; 0x45a <__udivmodsi4_loop>
 480:	60 95       	com	r22
 482:	70 95       	com	r23
 484:	80 95       	com	r24
 486:	90 95       	com	r25
 488:	9b 01       	movw	r18, r22
 48a:	ac 01       	movw	r20, r24
 48c:	bd 01       	movw	r22, r26
 48e:	cf 01       	movw	r24, r30
 490:	08 95       	ret

Disassembly of section .text.libgcc.mul:

000005c0 <__umulhisi3>:
 5c0:	a2 9f       	mul	r26, r18
 5c2:	b0 01       	movw	r22, r0
 5c4:	b3 9f       	mul	r27, r19
 5c6:	c0 01       	movw	r24, r0
 5c8:	a3 9f       	mul	r26, r19
 5ca:	70 0d       	add	r23, r0
 5cc:	81 1d       	adc	r24, r1
 5ce:	11 24       	eor	r1, r1
 5d0:	91 1d       	adc	r25, r1
 5d2:	b2 9f       	mul	r27, r18
 5d4:	70 0d       	add	r23, r0
 5d6:	81 1d       	adc	r24, r1
 5d8:	11 24       	eor	r1, r1
 5da:	91 1d       	adc	r25, r1
 5dc:	08 95       	ret
